(this["webpackJsonpdhis2-importer"]=this["webpackJsonpdhis2-importer"]||[]).push([[0],{144:function(e,t,n){"use strict";async function a(e,t){for(let n=0;n<e.length;n++)await t(e[n],n,e)}n.d(t,"a",(function(){return a}))},199:function(e,t,n){},309:function(e,t,n){"use strict";(function(e,a){var r=n(31),i=n(7),s=n(2),o=n(324),l=n(0),c=n.n(l),u=(n(199),n(16)),d=n.n(u),p=n(104),m=n(315),g=n.n(m),h=n(316),f=n.n(h),y=n(185),v=n.n(y),b=n(144),w=n(139),E=n(182),O=n(317),S=n.n(O),U=(n(506),n(508),n(509),n(318)),I=n(180),j=n(563),P=n(319),N=n.n(P),k=n(320),R=n.n(k);function A(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}const M=[-12.9487,9.0131],x=Object.getPrototypeOf((async function(){})).constructor;v.a.openAsBlob=(e,t)=>{e.outputAsync({type:"blob"}).then((function(e){if(window.navigator&&window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(e,t||"out.xlsx");else{var n=window.URL.createObjectURL(e),a=document.createElement("a");document.body.appendChild(a),a.href=n,a.download=t||"out.xlsx",a.click(),window.URL.revokeObjectURL(n),document.body.removeChild(a)}}))},d.a.flattenObject=function e(t,n="",a={},r=!0){if(d.a.isString(t)||d.a.isNumber(t)||d.a.isBoolean(t)||r&&d.a.isNull(t))return a[n]=t,a;if(d.a.isArray(t)||d.a.isPlainObject(t)){for(let i in t){let s=n;d.a.isArray(t)?s+=`[${i}]`:s=d.a.isEmpty(n)?i:n+"-"+i,e(t[i],s,a,r)}return a}return a},d.a.flattenObjects=e=>e.map(e=>d.a.flattenObject(e));class B{constructor(){const t="object"===typeof navigator&&"ReactNative"===navigator.product,n="object"===typeof e&&!0,r="object"===typeof window,i="function"===typeof importScripts;if(t)this.env=a;else if(i)this.env=this;else if(r)this.env=window;else{if(!n)throw new Error("Unsupported environment for fetch-intercept");this.env=a}this.fetch=this.env.fetch}static register(e={}){if(this._instance)return this._instance;const t=new this;for(let n=0;n<this.hooks.length;n++){const a=this.hooks[n];"function"===typeof e[a]&&(t[a]=e[a])}return t.hijack(),this._instance=t,t}unregister(){this.env.fetch=this.fetch,delete this.constructor._instance}hijack(){const e=new AbortController,t=e.signal;this.env.fetch=(...n)=>{let a;if(n[0]instanceof Request){let e={};["cache","context","credentials","destination","headers","integrity","method","mode","redirect","referrer","referrerPolicy","url","body","bodyUsed"].forEach(t=>{t in n[0]&&(e[t]=n[0][t])}),e.signal=t;const r=e.url,i=Object(s.a)(e,["url"]);a=new Request(r,i)}else{const e=n[0],r=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?A(n,!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):A(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},n[1],{signal:t});a=new Request(e,r)}"function"===typeof this.onBeforeRequest&&this.onBeforeRequest(a,e);const r=this.fetch.call(this.env,a);return"function"===typeof this.onAfterRequest&&this.onAfterRequest(a,e),r.then(t=>(t.ok?"function"===typeof this.onRequestSuccess&&this.onRequestSuccess(t,a,e):"function"===typeof this.onRequestFailure&&this.onRequestFailure(t,a,e),t))}}}B.hooks=["onBeforeRequest","onRequestSuccess","onRequestFailure"];let C=void 0;B.register({onBeforeRequest(e,t){C&&C([e.url,e.method,"running"])},onRequestSuccess(e,t,n){C&&C([t.url,t.method,"success",e.status])},onRequestFailure(e,t,n){C&&C([t.url,t.method,"failed",e.status])}});t.a=function({recipe:e,dhis2:t,onSave:n}){const a=Object(l.useState)(e.editable),i=Object(r.a)(a,2),s=i[0],u=i[1],m=Object(l.useState)(e.name),h=Object(r.a)(m,2),y=h[0],O=h[1],P=Object(l.useState)(e.code),k=Object(r.a)(P,2),A=k[0],B=k[1],T=Object(l.useState)(void 0),Q=Object(r.a)(T,2),q=Q[0],J=Q[1],_=Object(l.useState)([]),D=Object(r.a)(_,2),L=D[0],F=D[1];C=F;const Y=Object(l.useState)(""),G=Object(r.a)(Y,2),V=G[0],z=G[1];async function H(e){z(void 0),J(void 0);try{const n=N.a.format(e,{parser:"babel",plugins:[R.a]});B(n);const a=n.includes("return ")?n:"return "+n,r=await new x("dhis2","asyncForEach","_","turf","Fuse","PapaParse","XlsxPopulate","DatePeriods",a)(t,b.a,d.a,p,g.a,f.a,v.a,U.a);J(r)}catch(n){J(void 0),z(n.message+": line"+(n.lineNumber-3)+(n.columnNumber?":"+n.columnNumber:""))}}const W=e.code!==A||y!==e.name;return c.a.createElement("div",null,c.a.createElement(E.a,{id:"standard-name",label:"Name",value:y,style:{width:"400px"},onChange:e=>{O(e.target.value)},margin:"normal"}),c.a.createElement("div",{style:{color:"red"}},V),c.a.createElement("br",null),e&&s&&c.a.createElement(S.a,{readOnly:e&&!1===e.editable,name:"script",fontSize:18,width:"80%",height:400,mode:"javascript",theme:"monokai",value:A,onChange:e=>{B(e)},commands:[{name:"Run",bindKey:{win:"Ctrl-r",mac:"Command-r"},exec:e=>{H(e.getValue())}}]}),c.a.createElement(w.a,{onClick:e=>{H(A)},title:"ctrl-r to run from the editor"},"Run"),c.a.createElement(w.a,{variant:"contained",onClick:async function(){const t={id:e.id,name:y,code:A,editable:!0};n(t)},disabled:!W},"Save")," ",c.a.createElement(I.a,{control:c.a.createElement(j.a,{value:s}),label:"Hide editor",onChange:()=>u(!s)}),c.a.createElement("span",null,L&&L.length>1&&c.a.createElement(c.a.Fragment,null,c.a.createElement("a",{href:L[0],target:"_blank",rel:"noopener noreferrer"},L[0]),"     ",L.slice(1).join(" | "))),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement(o.a,{results:q,label:y||"",position:M}))}}).call(this,n(49),n(25))},318:function(e,t,n){"use strict";let a=[];const r={1:"1",2:"1",3:"1",4:"2",5:"2",6:"2",7:"3",8:"3",9:"3",10:"4",11:"4",12:"4"},i={1:[1,2,3,4,5,6],2:[7,8,9,10,11,12]},s=["Janvier","F\xe9vrier","Mars","Avril","Mai","Juin","Juillet","Ao\xfbt","Septembre","Octobre","Novembre","D\xe9cembre"],o=["January","February","March","April","May","June","July","August","September","October","November","December"];let l={};const c={1:["1","2","3"],2:["4","5","6"],3:["7","8","9"],4:["10","11","12"]};let u={};const d="yearly",p="monthly",m="quarterly",g="sixMonthly",h="financialJuly",f=[d,p,m,g,h],y="fyJulyQuarter",v="quarter",b="month",w="monthYear",E="sixMonth",O="eduQuarter",S=[y,v,b,w,E,O];t.a=class{static setLocale(e){const t="fr"===e?s:o;this.setMonthTranslations(t)}static setMonthTranslations(e){l={1:[(a=e)[0],a[1],a[2]],2:[a[3],a[4],a[5]],3:[a[6],a[7],a[8]],4:[a[9],a[10],a[11]]},u={4:"T1 - "+a[8]+" - "+a[11],1:"T2 - "+a[0]+" - "+a[2],2:"T3 - "+a[3]+" - "+a[5],3:"XX - "+a[6]+" - "+a[7]}}static padMonth(e){return e<10?"0"+e:e}static month2quarter(e){return r[e]}static dhis2MonthPeriod(e,t){return e+""+this.padMonth(t)}static dhis2QuarterPeriod(e,t){return e+"Q"+this.month2quarter(t)}static dhis2QuarterPeriodShort(e){return this.month2quarter(e)}static monthsInQuarter(e){let t=""+e,n=c[t];if(void 0===n)throw new Error("Doesn't appear to be a quarter"+t);return n}static monthsNamesInQuarter(e){let t=""+e,n=[];if(void 0===(n=l[t]))throw new Error("Doesn't appear to be a quarter"+t);return n}static currentQuarter(){let e=new Date;return e.setMonth(e.getMonth()-2),e.getFullYear()+"Q"+this.quarterByMonth(e.getMonth()+1)}static monthName(e){const t=this.split(e,p),n=t[t.length-1].slice(4),r=parseInt(n,0);return a[r-1]}static monthNameYear(e){const t=this.split(e,p),n=t[t.length-1],r=n.slice(0,4),i=n.slice(4),s=parseInt(i,0);return a[s-1]+" "+r}static sixMonthlyName(e){const t=this.split(e,"yearly")[0],n=this.split(e,"monthly");return this.monthlyNameFormat(n,t)}static monthlyNameFormat(e,t){return[e[0],e[e.length-1]].map(e=>this.monthName(e)).join(" - ")+" "+t}static displayName(e,t){if(t===y)return this.period2FinancialYearJulyQuarterName(e);if(t===v)return this.period2QuarterName(e);if(t===b)return this.monthName(e);if(t===w)return this.monthNameYear(e);if(t===E)return this.sixMonthlyName(e);if(t===O)return this.eduQuarterName(e);throw new Error("unsupported format '"+t+"' see "+S.join(","))}static eduQuarterName(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(5,6),0);return n>=1&&n<4&&(t-=1),t+"-"+(t+1)+" "+u[n]}static period2QuarterName(e){const t=this.split(e,d)[0],n=this.split(e,m)[0],a=this.split(n,p);return this.monthlyNameFormat(a,t)}static period2FinancialYearJulyQuarterName(e){return this.financialJulyQuarterName(e)+" ("+this.period2QuarterName(e)+")"}static financialJulyQuarterName(e){const t=this.split(e,d)[0],n=this.split(e,m)[0];let a=parseInt(t,0),r=parseInt(n.slice(5),0);return r<=2?(a-=1,r+=2):r-=2,"FY "+a+"/"+(a+1)+" Quarter "+r}static formatValues(e){const t=this.split(e,m)[0],n=this.split(t,p),a=this.detect(e)==p?e:n[0],r=this.split(e,d)[0];let i,s=parseInt(r,0),o=parseInt(t.slice(5),0),l=s;return o<=2?(l=s-1,i=o+2):i=o-2,{dhis2period:e,financialJulyYear:l,financialJulyYearPlus1:l+1,year:s,quarterNumber:o,financialQuarterNumber:i,monthNumber:parseInt(a.slice(4),0),monthName:this.monthName(a),monthQuarterStart:n[0]?this.monthName(n[0]):"",monthQuarterEnd:n[2]?this.monthName(n[2]):""}}static format(e,t){return this.substituteStr(t,this.formatValues(e))}static substituteStr(e,t){return e.replace(/(\${([^}]+)})/g,(function(e){let n=e.replace(/\${/,"").replace(/}/,"");if(void 0!==t[n])return t[n];throw new Error("unknown placeholder :'"+n+"' only knows "+JSON.stringify(t))}))}static next(e){if(e.includes("Q"))return this.nextQuarter(e);if(e.includes("S"))return this.nextSixMonth(e);if(6===e.length)return this.nextYearMonth(e);if(4===e.length)return this.nextYear(e);if(e.includes("July"))return this.nextFinancialJuly(e);throw new Error("unsupported period format"+e)}static previous(e){if(e.includes("Q"))return this.previousQuarter(e);if(e.includes("S"))return this.previousSixMonth(e);if(6===e.length)return this.previousYearMonth(e);if(4===e.length)return this.previousYear(e);if(e.includes("July"))return this.previousFinancialJuly(e);throw new Error("unsupported period format"+e)}static detect(e){if(e.includes("Q"))return m;if(e.includes("S"))return g;if(6===e.length)return p;if(4===e.length)return d;if(e.includes("July"))return h;throw new Error("unsupported period format"+e)}static nextYearMonth(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(4,6),0);return 12===n?(t+=1,n=1):n+=1,""+t+this.padMonth(n)}static previousYearMonth(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(4,6),0);return 1===n?(t-=1,n=12):n-=1,""+t+this.padMonth(n)}static nextYear(e){return""+(parseInt(e.slice(0,4),0)+1)}static previousYear(e){return""+(parseInt(e.slice(0,4),0)-1)}static nextFinancialJuly(e){return parseInt(e.slice(0,4),0)+1+"July"}static previousFinancialJuly(e){return parseInt(e.slice(0,4),0)-1+"July"}static nextQuarter(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(5,6),0);return 4===n?(t+=1,n=1):n<4&&(n+=1),t+"Q"+n}static nextSixMonth(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(5,6),0);return 2===n?(t+=1,n=1):n<2&&(n+=1),t+"S"+n}static previousQuarter(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(5,6),0);return 1===n?(t-=1,n=4):n>1&&(n-=1),t+"Q"+n}static previousSixMonth(e){let t=parseInt(e.slice(0,4),0),n=parseInt(e.slice(5,6),0);return 1===n?(t-=1,n=2):n>1&&(n-=1),t+"S"+n}static quarterByMonth(e){let t=0;return e>=1&&e<=3&&(t=1),e>=4&&e<=6&&(t=2),e>=7&&e<=9&&(t=3),e>=10&&e<=12&&(t=4),t}static split(e,t){if(void 0===e)throw new Error("Can't split undefined period into "+t);if(e.includes("Q"))return this.splitYearQuarter(e,t);if(e.includes("S"))return this.splitYearSixMonth(e,t);if(e.includes("July"))return this.splitFinancialJuly(e,t);if(6===e.length)return this.splitYearMonth(e,t);if(4===e.length)return this.splitYear(e,t);throw new Error("don't know how to split "+e+" as '"+t+"' length"+e.length)}static splitFinancialJuly(e,t){let n=parseInt(e.slice(0,4),0);return t===p?[["07",0],["08",0],["09",0],["10",0],["11",0],["12",0],["01",1],["02",1],["03",1],["04",1],["05",1],["06",1]].map(e=>""+(n+e[1])+e[0]):t===m?[["Q3",0],["Q4",0],["Q1",1],["Q2",1]].map(e=>""+(n+e[1])+e[0]):t===d?[""+n,""+(n+1)]:t===g?[n+"S2",n+1+"S1"]:void this.unsupportedSplitType(e,t)}static splitYear(e,t){let n=parseInt(e.slice(0,4),0);return t===p?["01","02","03","04","05","06","07","08","09","10","11","12"].map(e=>""+n+e):t===g?[n+"S1",n+"S2"]:t===m?["Q1","Q2","Q3","Q4"].map(e=>""+n+e):t===d?[""+n]:t===h?[n-1+"July",n+"July"]:void this.unsupportedSplitType(e,t)}static splitYearQuarter(e,t){let n=parseInt(e.slice(0,4),0),a=parseInt(e.slice(5,6),0);return t===p?this.monthsInQuarter(a).map(e=>this.dhis2MonthPeriod(n,e)):t===g?[a<3?n+"S1":n+"S2"]:t===m?[e]:t===d?[""+n]:t===h?a<3?[n-1+"July"]:[n+"July"]:void this.unsupportedSplitType(e,t)}static splitYearSixMonth(e,t){let n=parseInt(e.slice(0,4),0),a=parseInt(e.slice(5,6),0);return t===p?i[a].map(e=>this.dhis2MonthPeriod(n,e)):t===g?[e]:t===m?1===a?[n+"Q1",n+"Q2"]:[n+"Q3",n+"Q4"]:t===d?[""+n]:t===h?1==a?[n-1+"July"]:[n+"July"]:void this.unsupportedSplitType(e,t)}static splitYearMonth(e,t){let n=parseInt(e.slice(0,4),0),a=parseInt(e.slice(4,6),0);if(t===p)return[e];if(t===m){return[n+"Q"+this.month2quarter(a)]}return t===g?a<7?[n+"S1"]:[n+"S2"]:t===d?[""+n]:t===h?a<7?[n-1+"July"]:[n+"July"]:void this.unsupportedSplitType(e,t)}static monthlyPeriods(e,t){return this.monthsInQuarter(t).map(t=>this.dhis2MonthPeriod(e,t))}static unsupportedSplitType(e,t){throw new Error("Don't know how to split : "+e+", unknown splitType "+t+" only knows "+f.join(", "))}static previousPeriods(e,t){for(var n="",a=[],r=0;r<t;r++)r>0&&(e=a[r-1]),n=this.previous(e),a.push(n);return a.reverse()}static nextPeriods(e,t){for(var n="",a=[],r=0;r<t;r++)r>0&&(e=a[r-1]),n=this.next(e),a.push(n);return a}}},324:function(e,t,n){"use strict";var a=n(31),r=n(0),i=n.n(r),s=n(310),o=n.n(s),l=n(641),c=n(638),u=n(104);function d(e){return"string"==typeof e}function p({value:e}){if(void 0===e)return"";if(d(e)&&e.length>100)return e.slice(0,100)+" ...";var t;return"number"==typeof(t=e)||d(t)||"boolean"==typeof t?function(e){return"boolean"==typeof e}(e)?e.toString():e:JSON.stringify(e)}var m=n(639),g=n(640),h=n(644),f=n(643),y=n(642),v=(n(376),n(181)),b=n(179),w=n(217),E=n(183);const O=[{name:"Thunderforest - Outdoors",attribution:"Thunderforest and OpenStreetMap contributors.",url:"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}{r}.png?apikey=7c352c8ff1244dd8b732e349e0b0fe8d"},{name:"Thunderforest - Landscapes",attribution:"Thunderforest and OpenStreetMap contributors.",url:"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}{r}.png?apikey=7c352c8ff1244dd8b732e349e0b0fe8d"},{name:"Google maps - Satelite",url:"http://mt3.google.com/vt/lyrs=s&x={x}&y={y}&z={z}",attribution:"Google"}];function S(){for(var e="#",t=0;t<6;t++)e+="0123456789ABCDEF"[Math.floor(16*Math.random())];return e}var U=function({lines:e,position:t,showableMap:n}){const s=Object(r.useState)(""),o=Object(a.a)(s,2),l=o[0],c=o[1],d=Object(r.useState)(O[0]),U=Object(a.a)(d,2),I=U[0],j=U[1];if(void 0==e)return i.a.createElement(i.a.Fragment,null);if(!n)return i.a.createElement("p",null,"Map will show if the lines contains a 'coordinates' field");const P=e.filter(e=>e.coordinates&&e.coordinates.startsWith("[[")||e.geometry&&["LineString","Polygon","Multipolygon"].includes(e.geometry.type)).map((e,t)=>{let n=e.geometry;try{n=u.polygon(JSON.parse(e.coordinates))}catch(r){try{n=u.multiPolygon(JSON.parse(e.coordinates))}catch(r){}}n&&n.properties&&(n.properties.line=e);const a="LineString"==n.type?1:.3;return i.a.createElement(m.a,{data:n,key:"parent-"+t,style:{fillColor:S(),color:S(),weight:a,opacity:a,fillOpacity:a},title:JSON.stringify(e),onClick:()=>{!function(e){c(e)}(e)}})}),N=e.filter(e=>{if(void 0===e.coordinates&&void 0===e.coordinate&&void 0===e.geometry)return!1;return!!(e.coordinate&&e.coordinate.latitude&&e.coordinate.longitude)||(!(!e.geometry||"Point"!=e.geometry.type)||void 0!==e.coordinates&&(!e.coordinates.startsWith("[[")&&""!=e.coordinates))}).map((e,t)=>{const n=e.coordinate&&e.coordinate.latitude&&e.coordinate.longitude?[e.coordinate.latitude,e.coordinate.longitude]:e.coordinates?JSON.parse(e.coordinates).reverse():e.geometry&&e.geometry.coordinates.slice(0).reverse();return i.a.createElement(g.a,{key:t,radius:2,center:n,color:e.color||"red",title:t},i.a.createElement(h.a,null,Object.keys(e).map(t=>i.a.createElement("div",null,i.a.createElement("b",null,t)," ",i.a.createElement(p,{value:e[t]})))))});return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",null,e.length," records. ",N.length," points displayed."," ",P.length," zones displayed."," ","string"==typeof l.name?l.name:""),i.a.createElement(b.a,null,i.a.createElement(v.a,null,"Layer"),i.a.createElement(E.a,{onChange:(e,t)=>{j(t.props.value)},value:I},O.map(e=>i.a.createElement(w.a,{value:e},e.name)))),i.a.createElement(f.a,{doubleClickZoom:!1,center:t,zoom:3,style:{width:"80%",height:"900px",padding:"0px"}},i.a.createElement(y.a,I),P,N))};function I({results:e,label:t,position:n}){const s=Object(r.useState)(1),u=Object(a.a)(s,2),d=u[0],m=u[1];if(Array.isArray(e)){const a=new Set;e.forEach(e=>Object.keys(e).forEach(e=>a.add(e)));const r=Array.from(a),s=r.includes("coordinates")||r.includes("coordinate")||r.includes("geometry"),u=(e,t)=>{m(t)},g=(t||"Result List").replace(/\s/g,"_")+".csv";return i.a.createElement("div",null,i.a.createElement(l.a,{value:d,onChange:u,"aria-label":"simple tabs example"},i.a.createElement(c.a,{label:"Table",value:1}),i.a.createElement(c.a,{label:"Map",value:2})),2==d&&i.a.createElement(U,{lines:e,position:n,showableMap:s}),1==d&&i.a.createElement(o.a,{title:t||"Result List",data:e,columns:r.map(e=>({name:e,options:{filter:!0,customBodyRender:e=>i.a.createElement(p,{value:e})}})),options:{filterType:"dropdown",print:!1,downloadOptions:{filename:g,separator:","},rowsPerPageOptions:[1,10,50,100,1e3]}}))}if(!Array.isArray(e))return i.a.createElement("div",null,i.a.createElement("pre",null,"number"==typeof(g=e)||function(e){return"string"==typeof e}(g)||function(e){return"boolean"==typeof e}(g)?i.a.createElement("pre",null,e):JSON.stringify(e,null,2)));var g}n.d(t,"a",(function(){return I}))},348:function(e,t,n){e.exports=n(552)},353:function(e,t,n){},380:function(e,t){},382:function(e,t){},430:function(e,t){},457:function(e,t){},458:function(e,t){},552:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(10),s=n.n(i),o=(n(353),n(31)),l=(n(199),n(120)),c=n(75),u=n(636),d=n(126),p=n(218),m=n(177),g=n(323),h=n.n(g),f=n(217),y=n(183),v=n(637),b=n(321),w=n.n(b);var E=function(){return r.a.createElement("div",{style:{float:"right"}},"Help :"," ",r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://docs.dhis2.org/master/en/developer/html/dhis2_developer_manual_full.html#webapi_metadata_object_filter"},"Metadata object filter")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://gist.github.com/mestachs/e56a632a92a84148edda5678939626c5"},"Some bluesquare recipes")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://lodash.com/docs/4.17.15"},"lodash")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"http://turfjs.org/docs/"},"turf")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://www.papaparse.com/"},"Papa Parse")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/dtjohnson/xlsx-populate#usage"},"xlsx-populate"))))},O=n(309),S=n(188),U=n(69),I=n(121),j=n(144),P=n(29);const N="[id,name,ancestors[id,name],organisationUnitGroups[id,name,code]]";var k=class{constructor(e){const t=e||{};this.url=t.url||Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_DHIS2_URL,this.user=t.user||Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_USER,this.password=t.password||Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_PASSWORD,this.contractGroupId=t.contractGroupId||Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_CONTRACT_OU_GROUP,this.cache=[],this.userId="",this.baseUrl="..",this.ignoredStores=[""],this.version="",this.forceHttps=t.forceHttps,t.disableInitialize||(this.initialize=this.initialize())}initialize(){return console.info("Using node env: production"),this.d2=Object(P.getManifest)("./manifest.webapp").then(e=>{let t=e.getBaseUrl();return this.forceHttps&&(t=t.replace("http://","https://")),console.info("Using URL: "+t),this.baseUrl=t,t+"/api"}).catch(e=>this.url).then(e=>Object(P.init)({baseUrl:e,headers:null}).then(e=>{this.user=e.currentUser,this.userId=e.currentUser.id})),this}appVersion(){return Object(P.getManifest)("./manifest.webapp").then(e=>e.version)}currentUser(){return Object(P.getInstance)().then(e=>e.currentUser)}systemInfoRaw(){return Object(P.getInstance)().then(e=>e.system.systemInfo)}currentUserRaw(){return Object(P.getInstance)().then(e=>e.Api.getApi().get("/me?fields=:all,organisationUnits"+N+",dataViewOrganisationUnits"+N))}organisationUnits(e,t){return Object(P.getInstance)().then(n=>n.Api.getApi().get("/organisationUnits?fields="+e+"&pageSize=1000&page="+t))}api(){return Object(P.getInstance)().then(e=>e.Api.getApi())}organisationUnitGroups(e){return Object(P.getInstance)().then(t=>t.Api.getApi().get("/organisationUnitGroups?fields="+e+"&paging="+!1))}findOrganisationUnit(e){return Object(P.getInstance)().then(t=>t.Api.getApi().get("/organisationUnits/"+e))}dataElements(e){return Object(P.getInstance)().then(t=>t.Api.getApi().get("/dataElements"+e))}updateOrganisationUnit(e){return Object(P.getInstance)().then(t=>t.Api.getApi().update("/organisationUnits/"+e.id+"?preHeatCache=false",e))}imgUrl(){return Object(P.getInstance)().then(e=>e.Api.getApi().get("/attributes?filter=name:eq:imgUrl"))}addOrganisationUnitToGroup(e,t){return Object(P.getInstance)().then(n=>n.Api.getApi().post("/organisationUnitGroups/"+t+"/organisationUnits/"+e))}removeOrganisationUnitToGroup(e,t){return Object(P.getInstance)().then(n=>n.Api.getApi().delete("/organisationUnitGroups/"+t+"/organisationUnits/"+e))}findOrganisationUnitGroup(e){return Object(P.getInstance)().then(t=>t.Api.getApi().get("/organisationUnitGroups/"+e))}updateOrganisationUnitGroup(e){return Object(P.getInstance)().then(t=>t.Api.getApi().update("/organisationUnitGroups/"+e.id,e))}};var R=[{id:"D5a1DVMw7FV",name:"empty",editable:!0,code:'\n    const api = await dhis2.api();\n    const ou = await api.get("organisationUnits", {\n      fields: "id,name,ancestors[id,name]"\n    });\n\n    return _.flattenObjects(ou.organisationUnits);\n      '},{id:"lD3mlYe0S0X",name:"Basic - Access api",code:'\n  const api = await dhis2.api();\n  const ou = await api.get("organisationUnits", {\n    fields: "id,name",\n    paging: false\n  });\n  return ou.organisationUnits\n      '},{id:"u2Rzyn9ZvfD",name:"Basic - List of orgunits with ancestors and groups",editable:!1,code:'\n\n  const api = await dhis2.api();\n  const organisationUnitsResp = await api.get("organisationUnits", {\n    fields: "id,name,ancestors[id,name],organisationUnitGroups[id,name]",\n    paging: false\n  });\n  const organisationUnits =  organisationUnitsResp.organisationUnits.map(ou => {\n      return {\n          id: ou.id,\n          name: ou.name,\n          level0: ou.ancestors[0] && ou.ancestors[0].name,\n          level1: ou.ancestors[1] && ou.ancestors[1].name,\n          level2: ou.ancestors[2] && ou.ancestors[2].name,\n          level3: ou.ancestors[3] && ou.ancestors[3].name,\n          level4: ou.ancestors[4] && ou.ancestors[4].name,\n          groups: ou.organisationUnitGroups.map(g => g.name).sort().join(", ")\n      };\n  });\n  return organisationUnits\n  '},{id:"noCPOHibwHt",name:"Basic - List all available resources",code:"\nconst api = await dhis2.api();\n\nconst resources = await api.get(\"resources\")\nreturn resources.resources.map( r => {\n    return {\n        name: r.displayName,\n        snippet: 'const '+r.plural+'Resp = await api.get(\"'+r.plural+'\")'\n    }\n})\n\n    "},{id:"RWYYgYTGumd",name:"Basic - Super user audit",editable:!0,code:'\nconst api = await dhis2.api();\n\nconst userResp = await api.get("users",{\n    fields:"id,name,email,userCredentials[userRoles[id,name]],organisationUnits[id,name,level]",\n    paging:false\n})\n\nreturn userResp.users.map( user => {\n    return {\n        id: user.id,\n        name:user.name,\n        email: user.email,\n        superuser: user.userCredentials.userRoles.some(role => role["name"]==="Superuser") ? "super user !": "",\n        manageOrganisationUnits: user.organisationUnits.map(ou=> ou.name).join(", ")\n    }\n}).sort((a,b) => a.superuser ? -1 : b.super_user ? -1: 1)\n\n  '},{id:"bifaoG4Ky23",name:"Investigate GEOJSON data quality",editable:!1,code:'\n      const api = await dhis2.api();\n      const ou = await api.get("organisationUnits", {\n        fields: "id,name,coordinates,featureType",\n        paging: false\n      });\n      ou.organisationUnits.forEach(ou => {\n        ou.guessedFeatureType =\n          ou.coordinates === undefined\n            ? "NONE"\n            : ou.coordinates.startsWith("[[[[")\n            ? "MULTI_POLYGON"\n            : ou.coordinates.startsWith("[[[")\n            ? "POLYGON"\n            : ou.coordinates.startsWith("[[")\n            ? "LINE"\n            : ou.coordinates.startsWith("[")\n            ? "POINT"\n            : "NONE";\n\n        ou.featureTypeMatches = ou.guessedFeatureType === ou.featureType;\n      });\n      return ou.organisationUnits.filter(ou => ou.featureTypeMatches == false);\n    '},{id:"d4pmpo12iMp",name:"Audit coordinates",editable:!0,code:'\n    const stats = [];\n    const api = await dhis2.api();\n\n    const levels = await api.get("organisationUnitLevels", {\n      fields: "id,name,level",\n      order: "level"\n    });\n\n    const system = await api.get("system/info");\n    const version = system.version;\n    const v = version.split(".");\n    const vfloat = parseFloat(v[0] + "." + v[1]);\n    const fieldCoordinates = vfloat >= 2.32 ? "geometry" : "coordinates";\n\n    await asyncForEach(levels.organisationUnitLevels, async level => {\n      const withCoordinates = await api.get("organisationUnits", {\n        fields: "id,name",\n        filter: ["level:eq:" + level.level, fieldCoordinates + ":!null"],\n        paging: true,\n        pageSize: 1\n      });\n      const withoutCoordinates = await api.get("organisationUnits", {\n        fields: "id,name",\n        filter: ["level:eq:" + level.level, fieldCoordinates + ":null"],\n        paging: true,\n        pageSize: 1\n      });\n\n      const allOus = await api.get("organisationUnits", {\n        fields: "id,name",\n        filter: ["level:eq:" + level.level],\n        paging: true,\n        pageSize: 1\n      });\n\n      stats.push({\n        levelName: level.name,\n        level: level.level,\n        withCoordinates: withCoordinates.pager.total,\n        withoutCoordinates: withoutCoordinates.pager.total,\n        totalOrganisationUnits: allOus.pager.total,\n        percentageCoordinates:\n          allOus.pager.total > 0\n            ? ((withCoordinates.pager.total / allOus.pager.total) * 100).toFixed(2)\n            : "-"\n      });\n    });\n\n    return stats;\n\n\n '},{id:"D5a1DVMw7FV",name:"List data elements that aren't linked to program stages or datasets",editable:!0,code:'\n    const api = await dhis2.api();\n    const de = await api.get("dataElements", {\n    fields: "id,name,href,domainType",\n    filter: "dataSetElements:empty",\n    paging: false\n    });\n\n\n    const programResp = await api.get("programStages", {\n        fields: "programStageDataElements[dataElement[id]]",\n        paging: false\n    })\n\n    const usedByPrograms = new Set(programResp.programStages.flatMap(ps=> ps.programStageDataElements.map(psde => psde.dataElement.id)))\n\n    return de.dataElements.filter( de => !usedByPrograms.has(de.id))\n'},{id:"YuQRTavdpGE",name:"Show orgunits with a level 2 org unit on map",editable:!0,code:'\n    const api = await dhis2.api();\nconst parent = await api.get("organisationUnits", {\n  fields: "id,name,coordinates,geometry",\n  filter: "level:eq:2",\n  pageSize: 2\n});\nconst ou = await api.get("organisationUnits", {\n  fields: "id,name,coordinates,featureType,geometry,path",\n  filter: "path:ilike:" + parent.organisationUnits[0].id,\n  paging: false\n});\nreturn ou.organisationUnits;\n'},{id:"a0d79dd5c59",name:"Play - display events and map",editable:!0,code:'\n      const api = await dhis2.api();\n\n      const ev = await api.get("events", {\n        program: "VBqh0ynB2wv",\n        pageSize: 100\n      });\n\n      return ev.events;\n\n        '},{id:"af2fd38f351",name:"Play - Periods",editable:!0,code:'\nconst periods = ["2019", "2019S1", "2019Q3", "201907"];\nconst frequencies = [\n  "monthly",\n  "quarterly",\n  "yearly",\n  "sixMonthly",\n  "financialJuly"\n];\nconst results = [];\nperiods.forEach(period => {\n  frequencies.forEach(frequency => {\n    results.push(\n      [period, frequency].concat(DatePeriods.split(period, frequency))\n    );\n  });\n});\n\nreturn results;\n\n    '},{id:"af2fd38f350",name:"Play - display event values and map",editable:!0,code:'\n      const api = await dhis2.api();\n      const de = await api.get("dataElements", {\n        fields: "id,name",\n        filter: "domainType:eq:TRACKER",\n        paging: false\n      });\n      const dataElementsById = {};\n      de.dataElements.forEach(de => (dataElementsById[de.id] = de.name));\n      const ev = await api.get("events", {\n        program: "VBqh0ynB2wv",\n        pageSize: 100\n      });\n      const events = ev.events.map(event => {\n        r = { id: event.event, coordinate: event.coordinate };\n\n        event.dataValues.forEach(\n          dataValue => (r[dataElementsById[dataValue.dataElement]] = dataValue.value)\n        );\n\n        r.color = r["Gender"] == "Male" ? "blue" : "red";\n        return r;\n      });\n\n      return events;\n\n\n        '},{id:"dy1a1mseGR7",name:"Play - indicators using a given data element",editable:!0,code:'\n    const api = await dhis2.api();\n    const dataElementId = "fbfJHSPpUQD";\n    const ind = await api.get("indicators", {\n      filter: "numerator:token:" + dataElementId,\n      fields:\n        "id,name,numerator,denominator,numeratorDescription,denominatorDescription",\n      paging: false\n    });\n    const ind2 = await api.get("indicators", {\n      filter: "denominator:token:" + dataElementId,\n      fields:\n        "id,name,numerator,denominator,numeratorDescription,denominatorDescription",\n      paging: false\n    });\n    return _.uniqBy(ind.indicators.concat(ind2.indicators), i => i.id);\n    '},{id:"ToQVD4irW3Q",name:"Play - programIndicators using a given tracker data element",editable:!0,code:'\n    const api = await dhis2.api();\nconst dataElementId = "Zj7UnCAulEk";\nconst ind = await api.get("programIndicators", {\n  filter: "expression:token:" + dataElementId,\n  fields: "id,name,expression,filter,description",\n  paging: false\n});\nconst ind2 = await api.get("programIndicators", {\n  filter: "filter:token:" + dataElementId,\n  fields: "id,name,expression,filter,description",\n  paging: false\n});\nreturn _.uniqBy(\n  ind.programIndicators.concat(ind2.programIndicators),\n  i => i.id\n);\n\n'},{id:"r6JQgt6y8Dn",name:"Play - fetch values for a period and display them on a map",editable:!0,code:'\n\n    const api = await dhis2.api();\n    const de = await api.get("dataElements", {\n      filter: "dataElementGroups.id:eq:qfxEYY9xAl6",\n      paging: false\n    });\n    const ou = await api.get("organisationUnits", {\n      paging: false,\n      fields: "id,name,geometry,coordinates"\n    });\n    const dataElementsById = _.keyBy(de.dataElements, de => de.id);\n    const organisationUnitsById = _.keyBy(ou.organisationUnits, ou => ou.id);\n    const dv = await api.get("dataValueSets", {\n      orgUnit: "ImspTQPwCqd",\n      children: true,\n      dataElementGroup: "qfxEYY9xAl6",\n      period: "201905"\n    });\n    dv.dataValues.forEach(dv => {\n      dv.dataElement = dataElementsById[dv.dataElement];\n      dv.orgUnit = organisationUnitsById[dv.orgUnit];\n      dv.geometry = organisationUnitsById[dv.orgUnit.id].geometry;\n      dv.color = dv.value == 9 ? "blue" : "red";\n    });\n    return dv.dataValues;\n    '},{id:"gbvX3pogf7p",name:"Generic - overview of category combos",editable:!0,code:'\n\n    // press crtl-r to run\nconst api = await dhis2.api();\nconst ccc = await api.get("categoryCombos", {\n  fields: "id,name,categories[name,categoryOptions[name]]",\n  paging: false\n});\nccc.categoryCombos.forEach(cc => {\n  cc.description = cc.categories\n    .map(\n      c => c.name + " [" + c.categoryOptions.map(o => o.name).join(", ") + "]"\n    )\n    .join(", ");\n  delete cc.categories;\n});\nreturn ccc.categoryCombos;\n'},{id:"turfds456az",name:"Turf - demo",editable:!0,code:'\n    var points = [\n      turf.point([29.3599, -3.3614], { name: "Bujumbura, Burundi" }),\n      turf.point([4.3517, 50.8503], { name: "Bruxelles, Belgium" }),\n      turf.point([2.3522, 48.8566], { name: "Paris, France" }),\n      turf.point([13.405, 52.52], { name: "Berlin, Germany" }),\n      turf.point([15.2663, -4.4419], { name: "Kinshasa, DRC" }),\n      turf.point([-14.4392276, 14.5001717], { name: "Senegal" }),\n      turf.point([31.0335, -17.8252], { name: "Harare, Zimbabwe" }),\n      turf.point([-5.8593, 43.3614], { name: "Asturias, Spain" }),\n      turf.point([2.3912, 6.3703], { name: "Cotonou, Benin" }),\n      turf.point([-77.0369, 38.9072], { name: "Washington DC, USA" }),\n      turf.point([3.406448, 6.465422], { name: "Busuyi (Lagos, Nigeria)" })\n    ];\n    points.sort((p1, p2) => turf.distance(p1, p2));\n    const polPoints = points\n      .map(p => p.geometry.coordinates)\n      .concat([points[0].geometry.coordinates]);\n    var line = turf.lineString([[0, 10], [20, 20]]);\n    var tin = turf.tin(turf.featureCollection(points), "z");\n    return points.concat([line]).concat(tin["features"]);\n\n'},{id:"Yf6UHoPkdS6",name:"Play : update legendset colors",editable:!0,code:'\n    const api = await dhis2.api();\n    const lengendSetId = "Yf6UHoPkdS6";\n    const dryRun = true;\n    let legendSet = await api.get("legendSets/" + lengendSetId);\n    const colors = {\n      "30 - 40": "#d9f0az",\n      "40 - 50": "#addd50",\n      "50 - 60": "#41ab60"\n    };\n\n    Object.keys(colors).forEach(range => {\n      const legend = legendSet.legends.find(l => l.displayName == range);\n      legend.color = colors[range];\n    });\n    if (!dryRun) {\n      await api.update("legendSets/" + lengendSetId, legendSet);\n    }\n    legendSet = await api.get("legendSets/" + lengendSetId, {\n      fields: ":all"\n    });\n    return legendSet;\n\n'},{id:"aze123PkdS6",name:"Play : export orgunits with parent and groups",editable:!0,code:'\n  const api = await dhis2.api();\nconst ou = await api.get("organisationUnits", {\n  fields:\n    "id,name,coordinates,featureType,parent,organisationUnitGroups[id,name,groupSets[id]]",\n  paging: false\n});\nreturn ou.organisationUnits.map(ou => {\n  return {\n    id: ou.id,\n    name: ou.name,\n    coordinates: ou.coordinates,\n    featureType: ou.featureType,\n    parent: ou.parent ? ou.parent.id : undefined,\n    groups: ou.organisationUnitGroups.map(g => g.name).join(", ")\n  };\n});\n'},{id:"YlvBkdBjjVO",name:"Play : event counts",editable:!0,code:'\n    // press crtl-r to run\nconst api = await dhis2.api();\nconst pg = await api.get("programs", {\n  fields: "id,name,programStages[id,name]",\n  paging: false\n});\n\nconst results = [];\n\nawait asyncForEach(pg.programs, async program => {\n  try {\n    const ev = await api.get("events", {\n      program: program.id,\n      pageSize: 10,\n      totalPages: true\n    });\n    results.push({\n      id: program.id,\n\n      name: program.name,\n      events: ev.pager.total\n    });\n  } catch (ignore) {}\n});\n\nresults.push({\n  name: "TOTAL",\n  events: results.map(m => m.events).reduce((a, b) => a + b)\n});\nreturn results;\n'},{id:"YlvBkdBjaz5",name:"Play : CSV and fuse",editable:!0,code:'\n\n      const data = `\nline,name\n1,Adonkiia\n2,Afro Arabe Clinique\n      `;\n\n      const options = {\n        shouldSort: true,\n        includeScore: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ["name"]\n      };\n\n      const api = await dhis2.api();\n      const ou = await api.get("organisationUnits", {\n        paging: false,\n        fields: "id,name"\n      });\n\n      const fuse = new Fuse(ou.organisationUnits, options); // "list" is the item array\n\n      let ouToMaps = PapaParse.parse(data.trim(), {\n        header: true\n      });\n\n      ouToMaps.data.forEach(ouToMap => {\n        ouToMap.mapping = fuse.search(ouToMap.name)[0];\n      });\n\n      return _.flattenObjects(ouToMaps.data);\n\n\n    '},{id:"UMHyEfFHCcr",name:"Create event based on csv",editable:!0,code:'\n\n    const programId = "SNjlAlFiJDQ";\n\n    const rawData =`\neventid,id,Data element Name\nkyLIIfcispb,LOtFVpPWZ5u,1\n    `;\n\n    const dryRun = true;\n    const generateEmptyCsv = true;\n    // press crtl-r to run\n    const api = await dhis2.api();\n    const pg = await api.get("programs/" + programId, {\n      fields:\n        "id,name,programStages[programStageDataElements[dataElement[id,name,valueType]]]"\n    });\n    const dataElementsByName = {};\n    pg.programStages\n      .flatMap(ps => ps.programStageDataElements)\n      .map(psde => psde.dataElement)\n      .forEach(de => (dataElementsByName[de.name] = de));\n\n    if (generateEmptyCsv) {\n      const result = {\n        id: "orgUnitId",\n        eventid:\n          "pre-generated event Id by https://play.dhis2.org/2.29/api/system/id?limit=3"\n      };\n      Object.keys(dataElementsByName).forEach(k => {\n        result[k] = "";\n      });\n      return [result];\n    }\n\n    const csv = PapaParse.parse(rawData.trim(), {\n      header: true\n    });\n\n    function formatValue(value, de) {\n      if (de.valueType == "INTEGER_ZERO_OR_POSITIVE") {\n        return parseInt(value);\n      }\n      if (de.valueType == "BOOLEAN") {\n        return value === "Oui" || value === "1" ? true : false;\n      }\n      return value;\n    }\n\n    const events = csv.data.map(row => {\n      return {\n        program: programId,\n        event: row.eventid,\n        orgUnit: row.id,\n        eventDate: "2019-11-18T00:00:00.000",\n        status: "COMPLETED",\n        dataValues: Object.keys(dataElementsByName).map(column => {\n          return {\n            dataElement: dataElementsByName[column].id,\n            value: formatValue(row[column], dataElementsByName[column])\n          };\n        })\n      };\n    });\n\n    if (dryRun) {\n      return { events };\n    } else {\n      try {\n        const createResp = await api.post("events", { events });\n        return createResp;\n      } catch (except) {\n        return except;\n      }\n    }\n\n    '},{id:"UMHyEfFHXLS",name:"XlsxPopulate - Create a workbook from js",editable:!0,code:'\n\n    const workbook = await XlsxPopulate.fromBlankAsync();\n    const sheet = workbook.sheet(0);\n\n    sheet\n      .cell("A1")\n      .value("This was created in the browser!")\n      .style("fontColor", "ff0000");\n\n    const api = await dhis2.api();\n    const ou = await api.get("organisationUnits", {\n      fields: "id,name,ancestors[id,name]"\n    });\n    const r = sheet.cell("A2");\n    r.value(ou.organisationUnits.map(ou => [ou.id, ou.name]));\n    sheet.column("A").width(15);\n    sheet.column("B").width(30);\n    XlsxPopulate.openAsBlob(workbook, "orgunits.xslx");\n    return "a workbook will open shortly";\n    '}];const A=Object(l.a)(e=>({root:{width:"100%",margin:"auto"},paper:{paddingBottom:"100%",paddingLeft:"100px"},fab:{position:"absolute",bottom:e.spacing(2),right:e.spacing(2)}}));function M({classes:e,match:t,recipes:n,setRecipe:a,setRecipes:i,history:s,onSave:o}){let l=n.find(e=>e.id===t.params.recipeId);return void 0===l&&(l=n[0]),a(l),r.a.createElement(r.a.Fragment,null,r.a.createElement(O.a,{key:l.id,recipe:l,dhis2:B,onSave:o}),r.a.createElement(v.a,{className:e.fab,onClick:function(){const e=x();i(n.concat([e])),a(e),s.push("/recipes/"+e.id)}},r.a.createElement(w.a,null)))}function x(){return{id:Object(I.generateUid)(),name:"New - ",code:'\n// press crtl-r to run\nconst api = await dhis2.api();\nconst ou = await api.get("organisationUnits", {\nfields: "id,name",\npaging: false\n});\nreturn ou.organisationUnits\n',editable:!0,fresh:!0}}const B=new k;var C=function(){const e=A(),t=Object(a.useState)(void 0),n=Object(o.a)(t,2),i=n[0],s=n[1];async function l(e){const t=await B.api();try{await t.post("/dataStore/taskr/"+e.id,e);delete b.fresh}catch(n){}await t.update("/dataStore/taskr/"+e.id,e);window.location.reload()}Object(a.useEffect)(()=>{!async function(){if(void 0===i){const t=[],n=await B.api();try{const e=await n.get("dataStore/taskr");await Object(j.a)(e,async e=>{const a=await fetch(n.baseUrl+"/dataStore/taskr/"+e,{headers:n.defaultHeaders}),r=await a.arrayBuffer();let i=new TextDecoder("iso-8859-1").decode(r);const s=JSON.parse(i);t.push(s)})}catch(e){console.log(e)}0==t.length&&t.push(x()),s(t.concat(R))}}()},[i,s]);const g=Object(a.useState)(void 0),v=Object(o.a)(g,2),b=v[0],w=v[1];return r.a.createElement(S.a,null,void 0===i&&r.a.createElement("span",null,"Loading..."),i&&r.a.createElement("div",{className:e.root},r.a.createElement(u.a,{position:"static",color:"primary"},r.a.createElement(p.a,null,r.a.createElement(m.a,{edge:"start",className:e.menuButton,color:"inherit","aria-label":"menu"},r.a.createElement(h.a,null)),r.a.createElement(c.a,{variant:"h6",color:"inherit"},"Taskr : your task runner."),r.a.createElement("div",{style:{marginLeft:"100px"}},r.a.createElement(y.a,{color:"inherit",value:b,style:{width:"400px",color:"white"},onChange:e=>{const t=e.target.value;w(t)}},i.map(e=>r.a.createElement(f.a,{value:e,component:S.b,to:"/recipes/"+e.id},e.name)))))),r.a.createElement(d.a,{className:e.paper},r.a.createElement(E,null),r.a.createElement(U.d,null,r.a.createElement(U.b,{path:"/recipes/:recipeId",render:t=>r.a.createElement(M,{classes:e,recipes:i,match:t.match,setRecipe:w,setRecipes:s,history:t.history,onSave:l})}),r.a.createElement(U.a,{to:"/recipes/D5a1DVMw7FV"})))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(C,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(e=>{e.unregister()})}},[[348,1,2]]]);
//# sourceMappingURL=main.80dcd1bf.chunk.js.map