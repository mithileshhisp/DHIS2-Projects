/* global trackerCapture, angular */

var trackerCapture = angular.module('trackerCapture');
trackerCapture.controller('RegistrationController',
    function($rootScope,
             $scope,
             $location,
             $timeout,
             $modal,
             $translate,
             orderByFilter,
             AttributesFactory,
             DHIS2EventFactory,
             TEService,
             CustomFormService,
             EnrollmentService,
             DialogService,
             CurrentSelection,
             MetaDataFactory,
             EventUtils,
             RegistrationService,
             DateUtils,
             TEIGridService,
             TEIService,
             TrackerRulesFactory,
             TrackerRulesExecutionService,
             TCStorageService,
             ModalService,
             OrgUnitFactory,
             OrganisationUnitService,
             ProgramAndTEIService,
             EHSService,
             CustomOrganisationUnitService) {

        $scope.today = DateUtils.getToday();
        $scope.trackedEntityForm = null;
        $scope.customRegistrationForm = null;
        $scope.selectedTei = {};
        $scope.tei = {};
        $scope.warningMessages = [];
        $scope.hiddenFields = [];
        $scope.assignedFields = [];
        $scope.errorMessages = {};
        $scope.hiddenSections = [];
        $scope.currentEvent = null;
        $scope.prStDes = null;
        $scope.registrationAndDataEntry = false;
        $scope.model={autoGeneratedAttFailed : false};

        $scope.helpTexts = {};
        $scope.registrationMode = 'REGISTRATION';
        var flag = {debug: true, verbose: false};
        $rootScope.ruleeffects = {};


        // for EHS Saint Lucia
        $scope.rootOrgUnit = null;
        $scope.districtOrgUnits = {};
        $scope.communityOrgUnits = {};

        //$scope.selectedCommunityUid = null;

        $scope.selectedCommunityUid = 'Jgc02tIKupW';
        $scope.selectedCountryName = null;
        $scope.selectedDistrictName = null;
        $scope.selectedCommunityName = null;
        $scope.testCountry = "SAINT LUCIA";

        $scope.sqMetre ='P1vO4ogrIwe';
        $scope.sqFeet = 'Qxn31k5t1zR';

        $scope.trackerAssociateInstancesMap = [];
        $scope.establishmentsProgran = 'tITlMGNJTbJ';
        $scope.operatorsProgram = 'ieLe1vT4Vad';
        //$scope.displayAttribute = 'v9dlF13XghP';
        //$scope.displayAttribute = 'THGyyoT23tr';
        $scope.displayAttribute = 'tyXd890iVJG';
        $scope.ownerAttributeUid = 'THGyyoT23tr';
        $scope.optionSetUid = 'RyHTAVjHjGt';
        $scope.countryList = [];
        $scope.optionSetOptions = [];
        $scope.tempOrgUnit=[];
        $scope.tempSelectedCountry = null;
        $scope.tempSelectedCountry1 = null;
        $scope.tempCountryList = [];
        selections = CurrentSelection.get();
        $scope.districtOrgUnits1=[];
        $scope.communityOrgUnits11=[];
        $scope.districtOrgUnits12=[];
        $scope.selectedEntityinstance = selections.tei;
        $scope.districtmap =[];
        $scope.communitymap =[];

        $scope.selectedCountry = "SAINT LUCIA";

        //$scope.getDistrict( $scope.selectedCountry );

        $scope.init = function () {
        if(window.location.href.indexOf("establishments-registration") > -1) {

            $scope.getDistrict( $scope.selectedCountry );
        }
        else if(window.location.href.indexOf("operators-registration") > -1) {

            $scope.getDistrict( $scope.selectedCountry );
        }   
        };

        if ($scope.selectedEntityinstance) {

            for (var i = 0; i < $scope.selectedEntityinstance.attributes.length; i++) {

                    if ($scope.selectedEntityinstance.attributes[i].displayName == "Country") {
                        $scope.selectedCountry1 = $scope.selectedEntityinstance.attributes[i].value;
                        $scope.tempSelectedCountry1 = $scope.selectedCountry1;
                    }
                }
        }

        if ($scope.selectedEntityinstance) {
            if ($scope.tempSelectedCountry1 == "SAINT LUCIA") {
                OrganisationUnitService.getLevel3OrganisationUnit().then(function (communityOrganisationUnits) {
                    $scope.communityOrgUnits = communityOrganisationUnits.organisationUnits;
                    for (var j = 0; j < $scope.communityOrgUnits.length; j++) {
                        $scope.communitymap[$scope.communityOrgUnits[j].name] = $scope.communityOrgUnits[j].id;
                    }

                    OrganisationUnitService.getLevel2OrganisationUnit().then(function (level2OrgUnit) {
                        for (var i = 0; i < level2OrgUnit.organisationUnits.length; i++) {
                            $scope.districtmap[level2OrgUnit.organisationUnits[i].name] = level2OrgUnit.organisationUnits[i].id;

                        }

                        for (var i = 0; i < $scope.selectedEntityinstance.attributes.length; i++) {
                            if ($scope.selectedEntityinstance.attributes[i].displayName == "District") {
                                $scope.selectedDistrict1 = $scope.selectedEntityinstance.attributes[i].value;
                                $scope.selectedDistrict1 = $scope.districtmap[$scope.selectedDistrict1];

                            }
                            if ($scope.selectedEntityinstance.attributes[i].displayName == "City/Community") {
                                $scope.selectedCommunity1 = $scope.selectedEntityinstance.attributes[i].value;
                                $scope.selectedCommunity1 = $scope.communitymap[$scope.selectedCommunity1];
                            }

                            if ($scope.selectedEntityinstance.attributes[i].displayName == "Country") {
                                $scope.selectedCountry1 = $scope.selectedEntityinstance.attributes[i].value;
                                $scope.tempSelectedCountry1 = $scope.selectedCountry1;


                            }
                        }


                    });


                });

            }
            else{ for (var i = 0; i < $scope.selectedEntityinstance.attributes.length; i++) {
                if ($scope.selectedEntityinstance.attributes[i].displayName == "District") {
                    $scope.selectedDistrict1 = $scope.selectedEntityinstance.attributes[i].value;


                }
                if ($scope.selectedEntityinstance.attributes[i].displayName == "City/Community") {
                    $scope.selectedCommunity1 = $scope.selectedEntityinstance.attributes[i].value;

                }

                if ($scope.selectedEntityinstance.attributes[i].displayName == "Country") {
                    $scope.selectedCountry1 = $scope.selectedEntityinstance.attributes[i].value;




                }
            }

            }
        }

        OrganisationUnitService.getRootOrganisationUnit().then(function(rootOrganisationUnit){
            $scope.rootOrgUnit = rootOrganisationUnit.organisationUnits[0];

            //$scope.selectedCountryName = rootOrganisationUnit.organisationUnits[0].name;

            //$scope.countryList.push( rootOrganisationUnit.organisationUnits[0]);

            $scope.tempOrgUnit['code'] = rootOrganisationUnit.organisationUnits[0].name;
            $scope.tempOrgUnit['name'] = rootOrganisationUnit.organisationUnits[0].name;
            $scope.tempCountryList.push($scope.tempOrgUnit);

            EHSService.getOptionsByOptionSet( $scope.optionSetUid ).then(function( optionMembers ){
                $scope.optionSetOptions = optionMembers.options;

                //$scope.countryList.push($scope.optionSetOptions);
                //$scope.countryList = {
                //    'code' : $scope.rootOrgUnit.name,
                //    'name' : $scope.rootOrgUnit.name
                //};

                //var num1 = [1, 2, 3],
                //    num2 = [4, 5, 6],
                //    num3 = [7, 8, 9];
                //
                //var nums = num1.concat(num2, num3);
                //
                //console.log(nums); // Result: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                //

                /*
                 for ( var i in $scope.optionSetOptions ) {
                 var tempOption = [];
                 tempOption['code'] = $scope.optionSetOptions[i].code;
                 tempOption['name'] = $scope.optionSetOptions[i].name;
                 $scope.countryList.push(tempOption);
                 }
                 */

                //$scope.countryList = $scope.optionSetOptions;

                $scope.countryList = $scope.tempCountryList.concat($scope.optionSetOptions);
                //$scope.selectedCountry = 0;
                //$scope.selectedCountry  = $scope.tempCountryList.concat($scope.optionSetOptions);
                //$scope.countryList.add[$scope.optionSetOptions];
                //$scope.selectedCountryName = rootOrganisationUnit.organisationUnits[0].name;
            });

            /*
            $timeout(function() {
                //$scope.selectedCountry = $scope.countryList[1];
                $scope.lastItem = $scope.countryList[$scope.countryList.length - 1];

                //alert( $scope.lastItem );
            }, 100);
            */

            //$scope.selectedCountry = $scope.countryList[1].name;

        });


        //$scope.selectedCountry.setDefault = $scope.countryList[0];


        $scope.getDistrict = function( selectedCountry ) {
            //alert( selectedCountry );
           // $scope.selectedCountry1=selectedCountry;
            $scope.selectedCountryName = selectedCountry;

            $scope.districtOrgUnits = {};
            $scope.communityOrgUnits = {};
            //$scope.selectedCountry1=selectedcountry;
            $scope.tempSelectedCountry = selectedCountry;
            $scope.tempSelectedCountry1 = selectedCountry;

            if( $scope.rootOrgUnit != null )
            {
                if( selectedCountry == $scope.rootOrgUnit.name ){
                    //  $scope.selectedCountry1=selectedcountry.displayName;
                    OrganisationUnitService.getLevel2OrganisationUnit().then(function(level2OrgUnit){
                        $scope.districtOrgUnits = level2OrgUnit.organisationUnits;

                    });
                }
                else{
                    $scope.selectedDistrict1="";
                    $scope.selectedCommunity1="";
                    $scope.selectedCommunityUid = $scope.rootOrgUnit.id;
                }
            }
            else
            {
                if( selectedCountry === 'SAINT LUCIA' ){
                    OrganisationUnitService.getLevel2OrganisationUnit().then(function(level2OrgUnit){
                        $scope.districtOrgUnits = level2OrgUnit.organisationUnits;

                    });
                }
                else{
                    $scope.selectedDistrict1="";
                    $scope.selectedCommunity1="";
                    $scope.selectedCommunityUid = 'Jgc02tIKupW';
                }
            }


        };

        $scope.getAnotherDistrict = function( anotherDistrictName ){
            $scope.selectedDistrict1=anotherDistrictName;
            //alert( anotherDistrictName );
            $scope.selectedCommunityUid = $scope.rootOrgUnit.id;
            $scope.selectedDistrictName = anotherDistrictName;
        };

        $scope.getAnotherCommunity = function( anotherCommunityName ){
            //alert( anotherCommunityName );
            $scope.selectedCommunity1=anotherCommunityName;
            $scope.selectedCommunityUid = $scope.rootOrgUnit.id;
            $scope.selectedCommunityName = anotherCommunityName;
        };

        OrganisationUnitService.getLevel2OrganisationUnit().then(function(level2OrgUnit){
            $scope.districtOrgUnits = level2OrgUnit.organisationUnits;

        });

        $scope.getCommunity = function( districtUid ){

            if( districtUid === null)
            {
                //alert(districtUid);
                $scope.communityOrgUnits = {};

            }

            else
            {
                OrganisationUnitService.getChildrenOrganisationUnits( districtUid ).then(function(communityOrganisationUnits){
                    $scope.communityOrgUnits = communityOrganisationUnits.children;

                    OrganisationUnitService.getOrganisationUnitObject( districtUid ).then(function(orgUnitObject){
                        //$scope.selectedDistrict = orgUnitObject;
                        $scope.selectedDistrictName = orgUnitObject.displayName;
                        $scope.selectedDistrict1=orgUnitObject.id;

                    });

                });
            }

        };

        $scope.getEnrollingOrgunit = function( enrollingOrgUnitUid ){
            //alert(enrollingOrgUnitUid);
            $scope.selectedCommunityUid = enrollingOrgUnitUid;

            OrganisationUnitService.getOrganisationUnitObject( enrollingOrgUnitUid ).then(function( organisationUnitObject ){
                //$scope.selectedCommunity = organisationUnitObjectObject;
                $scope.selectedOrgUnit = organisationUnitObject;
                $scope.selectedCommunityName = organisationUnitObject.displayName;
                //$scope.selectedCommunity = enrollingOrgUnitUid;
                $scope.selectedCommunity1=organisationUnitObject.id;
                //$scope.tempSelectedCountry = null;
                //$scope.tempSelectedCountry1 = null;
            });
        };
        // for saint Lucia
        if ($scope.trackerAssociateInstancesMap.length == 0)
        {
            AttributesFactory.getAll().then(function (atts) {
                angular.forEach(atts, function (att) {
                    if (att.valueType == 'TRACKER_ASSOCIATE') {
                        ProgramAndTEIService.getTrackedEntityInstancesByProgram( $scope.operatorsProgram ).then(function (teis) {
                            //var test = $rootScope.ConfigurationSettings.parameters['tracker-associate-attribute-display'].value;
                            //var trackerAssociateAttributeIndex = 5;//attributes start from 5th index through the API

                            for (var i in teis.trackedEntityInstances) {

                                for (var j in teis.trackedEntityInstances[i].attributes) {
                                    if (teis.trackedEntityInstances[i].attributes[j].attribute == $scope.displayAttribute ) {
                                        //console.log( teis.trackedEntityInstances[i].trackedEntityInstance +" -- " + teis.trackedEntityInstances[i].attributes[j].value );
                                        $scope.trackerAssociateInstancesMap[teis.trackedEntityInstances[i].trackedEntityInstance] = teis.trackedEntityInstances[i].attributes[j].value;
                                    }
                                }
                            }
                        });

                    }
                });
            });
        }
        $scope.attributesById = CurrentSelection.getAttributesById();
        if(!$scope.attributesById){
            $scope.attributesById = [];
            AttributesFactory.getAll().then(function(atts){
                angular.forEach(atts, function(att){
                    $scope.attributesById[att.id] = att;
                });

                CurrentSelection.setAttributesById($scope.attributesById);
            });
        }


        //get ouLevels
        $scope.ouLevels = CurrentSelection.getOuLevels();
        if(!$scope.ouLevels){
            TCStorageService.currentStore.open().done(function(){
                TCStorageService.currentStore.getAll('ouLevels').done(function(response){
                    var ouLevels = angular.isObject(response) ? orderByFilter(response, '-level').reverse() : [];
                    CurrentSelection.setOuLevels(orderByFilter(ouLevels, '-level').reverse());
                });
            });
        }

        $scope.optionSets = CurrentSelection.getOptionSets();
        if(!$scope.optionSets){
            $scope.optionSets = [];
            MetaDataFactory.getAll('optionSets').then(function(optionSets){
                angular.forEach(optionSets, function(optionSet){
                    $scope.optionSets[optionSet.id] = optionSet;
                });
                CurrentSelection.setOptionSets($scope.optionSets);
            });
        }

        $scope.isDisabled = function(attribute) {

            if( attribute.code === 'current_license_status' || attribute.code === 'current_license_expiry_date' )
            {
                return true;
            }
            else
            {
                return attribute.generated || $scope.assignedFields[attribute.id] || $scope.editingDisabled;
            }

        };





        OrgUnitFactory.getOrgUnit(($location.search()).ou).then(function(orgUnit) {
            $scope.selectedOrgUnit = orgUnit;
            $scope.selectedEnrollment = {
                enrollmentDate: $scope.today,
                incidentDate: $scope.today,
                orgUnitName: $scope.selectedOrgUnit.displayName
            };


            $scope.trackedEntities = {available: []};
            TEService.getAll().then(function (entities) {
                $scope.trackedEntities.available = entities;
                $scope.trackedEntities.selected = $scope.trackedEntities.available[0];
            });

            var getProgramRules = function () {
                $scope.trackedEntityForm = null;
                $scope.customRegistrationForm = null;
                $scope.allProgramRules = {
                    constants: [],
                    programIndicators: {},
                    programValidations: [],
                    programVariables: [],
                    programRules: []
                };
                if (angular.isObject($scope.selectedProgram) && $scope.selectedProgram.id) {
                    return TrackerRulesFactory.getRules($scope.selectedProgram.id).then(function (rules) {
                        $scope.allProgramRules = rules;
                    });
                }
            };

            //watch for selection of program
            $scope.$watch('selectedProgram', function (newValue, oldValue) {
                if (newValue !== oldValue) {
                    getProgramRules();

                    if ($scope.registrationMode === 'REGISTRATION') {
                        $scope.getAttributes($scope.registrationMode);
                    }
                }
            });

            //listen to modes of registration
            $scope.$on('registrationWidget', function (event, args) {
                $scope.selectedTei = {};
                $scope.tei = {};
                $scope.registrationMode = args.registrationMode;

                if ($scope.registrationMode !== 'REGISTRATION') {
                    $scope.selectedTei = args.selectedTei;
                    $scope.tei = angular.copy(args.selectedTei);
                }

                $scope.teiOriginal = angular.copy($scope.tei);

                if ($scope.registrationMode === 'PROFILE') {
                    $scope.selectedEnrollment = args.enrollment;
                    //$scope.ownerName = args.selectedTei.trackedEntityInstance;

                    if( args.enrollment.program === 'zuVSFlvcchx')
                    {
                        $scope.ownerName = $scope.trackerAssociateInstancesMap[args.selectedTei.MGyIMsppZp3];
						
                    }
                    else if( args.enrollment.program === 'tITlMGNJTbJ' )
                    {
                        $scope.ownerName = $scope.trackerAssociateInstancesMap[args.selectedTei.THGyyoT23tr];
                    }
					
                }

                $scope.getAttributes($scope.registrationMode);

                if ($scope.selectedProgram && $scope.selectedProgram.id) {
                    getProgramRules().then( function (rules) {
                        $scope.executeRules();
                    });
                }
            });

            $scope.getAttributes = function (_mode) {
                var mode = _mode ? _mode : 'ENROLLMENT';
                $scope.customRegistrationFormExists = false;
                $scope.customDataEntryForm = null;
                $scope.schedulingEnabled = true;
                AttributesFactory.getByProgram($scope.selectedProgram).then(function (atts) {
                    $scope.attributes = TEIGridService.generateGridColumns(atts, null, false).columns;
                    fetchGeneratedAttributes();
                    if ($scope.selectedProgram && $scope.selectedProgram.id) {
                        if ($scope.selectedProgram.dataEntryForm && $scope.selectedProgram.dataEntryForm.htmlCode) {
                            $scope.customRegistrationFormExists = true;
                            $scope.trackedEntityForm = $scope.selectedProgram.dataEntryForm;
                            $scope.trackedEntityForm.attributes = $scope.attributes;
                            $scope.trackedEntityForm.selectIncidentDatesInFuture = $scope.selectedProgram.selectIncidentDatesInFuture;
                            $scope.trackedEntityForm.selectEnrollmentDatesInFuture = $scope.selectedProgram.selectEnrollmentDatesInFuture;
                            $scope.trackedEntityForm.displayIncidentDate = $scope.selectedProgram.displayIncidentDate;
                            $scope.customRegistrationForm = CustomFormService.getForTrackedEntity($scope.trackedEntityForm, mode);
                        }

                        if ($scope.selectedProgram.programStages && $scope.selectedProgram.programStages[0] && $scope.selectedProgram.useFirstStageDuringRegistration && $scope.registrationMode === 'REGISTRATION') {
                            $scope.currentEvent = {};
                            $scope.registrationAndDataEntry = true;
                            $scope.prStDes = [];
                            $scope.currentStage = $scope.selectedProgram.programStages[0];
                            $scope.currentEvent.event = 'SINGLE_EVENT';
                            $scope.currentEvent.providedElsewhere = {};
                            $scope.currentEvent.orgUnit = $scope.selectedOrgUnit.id;
                            $scope.currentEvent.program = $scope.selectedProgram.id;
                            $scope.currentEvent.programStage = $scope.currentStage.id;
                            $scope.currentEvent.enrollmentStatus = $scope.currentEvent.status = 'ACTIVE';
                            $scope.currentEvent.executionDateLabel = $scope.currentStage.executionDateLabel;
                            $rootScope.ruleeffects[$scope.currentEvent.event] = {};
                            $scope.selectedEnrollment.status = 'ACTIVE';
                            angular.forEach($scope.currentStage.programStageDataElements, function (prStDe) {
                                $scope.prStDes[prStDe.dataElement.id] = prStDe;
                                if (prStDe.allowProvidedElsewhere) {
                                    $scope.allowProvidedElsewhereExists[$scope.currentStage.id] = true;
                                }
                            });

                            $scope.customDataEntryForm = CustomFormService.getForProgramStage($scope.currentStage, $scope.prStDes);
                        }
                    }
                });
            };

            var fetchGeneratedAttributes = function() {
                angular.forEach($scope.attributes, function(att) {
                    if (att.generated && !$scope.selectedTei[att.id]) {
                        TEIService.getGeneratedAttributeValue(att.id).then(function (data) {
                            if (data && data.status === "ERROR") {
                                var dialogOptions = {
                                    headerText: 'error',
                                    bodyText: data.message
                                };
                                DialogService.showDialog({}, dialogOptions);
                                $scope.model.autoGeneratedAttFailed = true;
                            } else {
                                if (att.valueType === "NUMBER") {
                                    $scope.selectedTei[att.id] = Number(data);
                                } else {
                                    $scope.selectedTei[att.id] = data;
                                }
                                $scope.model.autoGeneratedAttFailed = false;
                            }
                        });
                    }
                });
            };

            var goToDashboard = function (destination, teiId) {
                //reset form
                $scope.selectedTei = {};
                $scope.selectedEnrollment = {
                    enrollmentDate: $scope.today,
                    incidentDate: $scope.today,
                    orgUnitName: $scope.selectedOrgUnit.displayName
                };
                $scope.outerForm.submitted = false;
                $scope.outerForm.$setPristine();

                if (destination === 'DASHBOARD') {
                    $location.path('/dashboard').search({
                        tei: teiId,
                        program: $scope.selectedProgram ? $scope.selectedProgram.id : null
                    });
                }
                else if (destination === 'SELF') {
                    //notify user
                    var dialogOptions = {
                        headerText: 'success',
                        bodyText: 'registration_complete'
                    };
                    DialogService.showDialog({}, dialogOptions);
                    $scope.selectedTei = {};
                    $scope.tei = {};
                    fetchGeneratedAttributes();
                }
            };

            var reloadProfileWidget = function () {
                var selections = CurrentSelection.get();
                CurrentSelection.set({
                    tei: $scope.selectedTei,
                    te: $scope.selectedTei.trackedEntity,
                    prs: selections.prs,
                    pr: $scope.selectedProgram,
                    prNames: selections.prNames,
                    prStNames: selections.prStNames,
                    enrollments: selections.enrollments,
                    selectedEnrollment: $scope.selectedEnrollment,
                    optionSets: selections.optionSets
                });
                $timeout(function () {
                    $rootScope.$broadcast('profileWidget', {});
                }, 200);
            };

            var notifyRegistrtaionCompletion = function (destination, teiId) {
                if ($scope.registrationMode === 'ENROLLMENT') {
                    broadcastTeiEnrolled();
                }
                else {

                    // add for create new organisation unit while registration of establishment
                    CustomOrganisationUnitService.addNewOrganisationUnit($scope.tei,$scope.selectedEnrollment,destination).then(function(){
                        goToDashboard(destination ? destination : 'DASHBOARD', teiId);
                    });

                    //goToDashboard(destination ? destination : 'DASHBOARD', teiId);
                }
            };

            var performRegistration = function (destination) {
                RegistrationService.registerOrUpdate($scope.tei, $scope.optionSets, $scope.attributesById).then(function (registrationResponse) {
                    var reg = registrationResponse.response ? registrationResponse.response : {};
                    if (reg.reference && reg.status === 'SUCCESS') {
                        $scope.tei.trackedEntityInstance = reg.reference;

                        if ($scope.registrationMode === 'PROFILE') {
                            reloadProfileWidget();
                            $rootScope.$broadcast('teiupdated', {});
                        }
                        else {
                            if ($scope.selectedProgram) {

                                //enroll TEI
                                var enrollment = {};
                                enrollment.trackedEntityInstance = $scope.tei.trackedEntityInstance;
                                enrollment.program = $scope.selectedProgram.id;
                                enrollment.status = 'ACTIVE';
                                //enrollment.orgUnit = $scope.selectedOrgUnit.id;
                                enrollment.orgUnit = $scope.selectedCommunityUid;
                                enrollment.enrollmentDate = $scope.selectedEnrollment.enrollmentDate;
                                enrollment.incidentDate = $scope.selectedEnrollment.incidentDate === '' ? $scope.selectedEnrollment.enrollmentDate : $scope.selectedEnrollment.incidentDate;

                                EnrollmentService.enroll(enrollment).then(function (enrollmentResponse) {
                                    var en = enrollmentResponse.response && enrollmentResponse.response.importSummaries && enrollmentResponse.response.importSummaries[0] ? enrollmentResponse.response.importSummaries[0] : {};
                                    if (en.reference && en.status === 'SUCCESS') {
                                        enrollment.enrollment = en.reference;
                                        $scope.selectedEnrollment = enrollment;
                                        var dhis2Events = EventUtils.autoGenerateEvents($scope.tei.trackedEntityInstance, $scope.selectedProgram, $scope.selectedOrgUnit, enrollment, $scope.currentEvent);
                                        if (dhis2Events.events.length > 0) {
                                            DHIS2EventFactory.create(dhis2Events).then(function () {
                                                notifyRegistrtaionCompletion(destination, $scope.tei.trackedEntityInstance);
                                            });
                                        } else {
                                            notifyRegistrtaionCompletion(destination, $scope.tei.trackedEntityInstance);
                                        }
                                    }
                                    else {
                                        //enrollment has failed
                                        var dialogOptions = {
                                            headerText: 'enrollment_error',
                                            bodyText: enrollmentResponse.message
                                        };
                                        DialogService.showDialog({}, dialogOptions);
                                        return;
                                    }
                                });
                            }
                            else {
                                notifyRegistrtaionCompletion(destination, $scope.tei.trackedEntityInstance);
                            }
                        }
                    }
                    else {//update/registration has failed
                        var dialogOptions = {
                            headerText: $scope.tei && $scope.tei.trackedEntityInstance ? 'update_error' : 'registration_error',
                            bodyText: registrationResponse.message
                        };
                        DialogService.showDialog({}, dialogOptions);
                        return;
                    }
                });
            };

            function broadcastTeiEnrolled() {
                $rootScope.$broadcast('teienrolled', {});
            }

            $scope.registerEntity = function (destination) {
                //check for form validity
                $scope.outerForm.submitted = true;
                if ($scope.outerForm.$invalid) {
                    return false;
                }

                if ($scope.model.autoGeneratedAttFailed) {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('auto_generate_failed')
                    };
                    DialogService.showDialog({}, dialogOptions);

                    return false;
                }

                if ($scope.registrationAndDataEntry) {
                    $scope.outerDataEntryForm.submitted = true;
                    if ($scope.outerDataEntryForm.$invalid) {
                        return false;
                    }
                }

                //form is valid, continue the registration
                //get selected entity
                if (!$scope.selectedTei.trackedEntityInstanceeee) {
                    $scope.selectedTei.trackedEntity = $scope.tei.trackedEntity = $scope.selectedProgram && $scope.selectedProgram.trackedEntity && $scope.selectedProgram.trackedEntity.id ? $scope.selectedProgram.trackedEntity.id : $scope.trackedEntities.selected.id;
                    //$scope.selectedTei.orgUnit = $scope.tei.orgUnit = $scope.selectedOrgUnit.id;
                    $scope.selectedTei.orgUnit = $scope.tei.orgUnit = $scope.selectedCommunityUid;
                    $scope.selectedTei.attributes = $scope.tei.attributes = [];
                }

                //get tei attributes and their values
                //but there could be a case where attributes are non-mandatory and
                //registration form comes empty, in this case enforce at least one value

                //$scope.selectedCountryName;
                //$scope.selectedDistrictName;
                //$scope.selectedCommunityName;
                //var result = RegistrationService.processForm($scope.tei, $scope.selectedTei, $scope.teiOriginal, $scope.attributesById);
                //add for saint lucia

                $scope.selectedTei;

                 if( !$scope.selectedTei.trackedEntityInstanceeee && ($scope.selectedCountry1 == ""||$scope.selectedCountry1==null))
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_country_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }
                else if( !$scope.selectedTei.trackedEntityInstanceeee && $scope.selectedDistrict1 == "" ||$scope.selectedDistrict1==null)
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_district_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }
                else if( !$scope.selectedTei.trackedEntityInstanceeee && $scope.selectedCommunity1 == "" ||$scope.selectedCommunity1==null)
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_community_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }

                else
                {
                    if($scope.selectedCountryName==null)
                    {
                        $scope.selectedCountryName=$scope.teiOriginal.kbBDKjtFNEp;
                    }
                    if($scope.selectedDistrictName==null)
                    {
                        $scope.selectedDistrictName=$scope.teiOriginal.DmZxOpX64Sn;
                    }
                    var result = RegistrationService.processForm($scope.tei, $scope.selectedTei, $scope.teiOriginal, $scope.attributesById, $scope.selectedCountryName, $scope.selectedDistrictName, $scope.selectedCommunityName  );
                    $scope.formEmpty = result.formEmpty;
                    $scope.tei = result.tei;

                    if ($scope.formEmpty) {//registration form is empty
                        var dialogOptions = {
                            headerText: 'error',
                            bodyText: $translate.instant('form_is_empty_fill_at_least_one')
                        };
                        DialogService.showDialog({}, dialogOptions);
                        return;
                    }
                }
                performRegistration(destination);
            };

			
			$scope.registerEntity1 = function (destination) {
                //check for form validity
				/*
				if(selectedDistrict1==''||selectedDistrict1==null)
				{
					alert("please fill district value");
				}
				if(selectedCommunity1==''||selectedCommunity1==null)
				{
					alert("please fill comunity  value");
				}
				*/
				
                $scope.outerForm.submitted = true;
                if ($scope.outerForm.$invalid) {
                    return false;
                }

                if ($scope.model.autoGeneratedAttFailed) {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('auto_generate_failed')
                    };
                    DialogService.showDialog({}, dialogOptions);

                    return false;
                }

                if ($scope.registrationAndDataEntry) {
                    $scope.outerDataEntryForm.submitted = true;
                    if ($scope.outerDataEntryForm.$invalid) {
                        return false;
                    }
                }

                //form is valid, continue the registration
                //get selected entity
                if (!$scope.selectedTei.trackedEntityInstance) {
                    $scope.selectedTei.trackedEntity = $scope.tei.trackedEntity = $scope.selectedProgram && $scope.selectedProgram.trackedEntity && $scope.selectedProgram.trackedEntity.id ? $scope.selectedProgram.trackedEntity.id : $scope.trackedEntities.selected.id;
                    //$scope.selectedTei.orgUnit = $scope.tei.orgUnit = $scope.selectedOrgUnit.id;
                    $scope.selectedTei.orgUnit = $scope.tei.orgUnit = $scope.selectedCommunityUid;
                    $scope.selectedTei.attributes = $scope.tei.attributes = [];
                }

                //get tei attributes and their values
                //but there could be a case where attributes are non-mandatory and
                //registration form comes empty, in this case enforce at least one value

                //$scope.selectedCountryName;
                //$scope.selectedDistrictName;
                //$scope.selectedCommunityName;
                //var result = RegistrationService.processForm($scope.tei, $scope.selectedTei, $scope.teiOriginal, $scope.attributesById);
                //add for saint lucia

                $scope.selectedTei;

                if( !$scope.selectedTei.trackedEntityInstance && ($scope.selectedCountryName== ""||$scope.selectedCountryName==null))
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_country_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }
                else if( !$scope.selectedTei.trackedEntityInstance && $scope.selectedDistrictName== "" ||$scope.selectedDistrictName==null)
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_district_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }
                else if( !$scope.selectedTei.trackedEntityInstance && $scope.selectedCommunityName == "" ||$scope.selectedCommunityName==null)
                {
                    var dialogOptions = {
                        headerText: 'registration_error',
                        bodyText: $translate.instant('please_select_community_name')
                    };
                    DialogService.showDialog({}, dialogOptions);
                    return;
                }

                else
                {
                    if($scope.selectedCountryName==null)
                    {
                        $scope.selectedCountryName=$scope.teiOriginal.kbBDKjtFNEp;
                    }
                    if($scope.selectedDistrictName==null)
                    {
                        $scope.selectedDistrictName=$scope.teiOriginal.DmZxOpX64Sn;
                    }
                    var result = RegistrationService.processForm($scope.tei, $scope.selectedTei, $scope.teiOriginal, $scope.attributesById, $scope.selectedCountryName, $scope.selectedDistrictName, $scope.selectedCommunityName  );
                    $scope.formEmpty = result.formEmpty;
                    $scope.tei = result.tei;

                    if ($scope.formEmpty) {//registration form is empty
                        var dialogOptions = {
                            headerText: 'error',
                            bodyText: $translate.instant('form_is_empty_fill_at_least_one')
                        };
                        DialogService.showDialog({}, dialogOptions);
                        return;
                    }
                }
                performRegistration(destination);
				
            };
			
			
			
			
			
			
			
			
            $scope.executeRules = function () {

//for profile edit //
                OrganisationUnitService.getChildrenOrganisationUnits( $scope.selectedDistrict1 ).then(function(communityOrganisationUnits){
				$scope.communityOrgUnits = communityOrganisationUnits.children;});
        //for profile edit//
                //repopulate attributes with updated values
                $scope.selectedTei.attributes = [];
                angular.forEach($scope.attributes, function (metaAttribute) {
                    var newAttributeInArray = {
                        attribute: metaAttribute.id,
                        code: metaAttribute.code,
                        displayName: metaAttribute.displayName,
                        type: metaAttribute.valueType,
                        value: $scope.selectedTei[metaAttribute.id]
                    };

                    $scope.selectedTei.attributes.push(newAttributeInArray);
                });

                if ($scope.selectedProgram && $scope.selectedProgram.id) {
                    var eventExists = $scope.currentEvent && $scope.currentEvent.event;
                    TrackerRulesExecutionService.executeRules($scope.allProgramRules, eventExists ? $scope.currentEvent : 'registration', eventExists ? {
                        all: [$scope.currentEvent],
                        byStage: {[$scope.currentStage.id]:[$scope.currentEvent]}
                    } : null, $scope.prStDes, $scope.selectedTei, $scope.selectedEnrollment, $scope.optionSets, flag);
                }
            };

            //check if field is hidden
            $scope.isHidden = function (id) {
                //In case the field contains a value, we cant hide it.
                //If we hid a field with a value, it would falsely seem the user was aware that the value was entered in the UI.
                return $scope.selectedTei[id] ? false : $scope.hiddenFields[id];
            };

            $scope.teiValueUpdated = function (tei, field) {
                $scope.executeRules();
            };

            //listen for rule effect changes
            $scope.$on('ruleeffectsupdated', function (event, args) {
                if (args.event === "registration" || args.event === 'SINGLE_EVENT') {
                    $scope.warningMessages = [];
                    $scope.hiddenFields = [];
                    $scope.assignedFields = [];
                    $scope.errorMessages = {};
                    $scope.hiddenSections = [];

                    var effectResult = TrackerRulesExecutionService.processRuleEffectAttribute(args.event, $scope.selectedTei, $scope.tei, $scope.currentEvent, {}, $scope.currentEvent, $scope.attributesById, $scope.prStDes, $scope.hiddenFields, $scope.hiddenSections, $scope.warningMessages, $scope.assignedFields, $scope.optionSets);
                    $scope.selectedTei = effectResult.selectedTei;
                    $scope.currentEvent = effectResult.currentEvent;
                    $scope.hiddenFields = effectResult.hiddenFields;
                    $scope.hiddenSections = effectResult.hiddenSections;
                    $scope.assignedFields = effectResult.assignedFields;
                    $scope.warningMessages = effectResult.warningMessages;
                }
            });

            $scope.interacted = function (field) {
                var status = false;
                if (field) {
                    status = $scope.outerForm.submitted || field.$dirty;
                }
                return status;
            };

            $scope.getTrackerAssociate = function (selectedAttribute, existingAssociateUid) {
                var modalInstance = $modal.open({
                    templateUrl: 'components/teiadd/tei-add.html',
                    controller: 'TEIAddController',
                    windowClass: 'modal-full-window',
                    resolve: {
                        relationshipTypes: function () {
                            return $scope.relationshipTypes;
                        },
                        addingRelationship: function () {
                            return false;
                        },
                        selections: function () {
                            return CurrentSelection.get();
                        },
                        selectedTei: function () {
                            return $scope.selectedTei;
                        },
                        selectedAttribute: function () {
                            return selectedAttribute;
                        },
                        existingAssociateUid: function () {
                            return existingAssociateUid;
                        },
                        selectedProgram: function () {
                            return $scope.selectedProgram;
                        },
                        relatedProgramRelationship: function () {
                            return $scope.relatedProgramRelationship;
                        }
                    }
                });
                modalInstance.result.then(function (res) {
                    if (res && res.id) {
                        $scope.selectedTei[selectedAttribute.id] = res.id;

                        $scope.ownerName = res.tyXd890iVJG;
                        /* if(res && res.tyXd890iVJG) {
                         $scope.ownerName = res.tyXd890iVJG;
                         }
                         else {
                         $scope.ownerName =" ";
                         }*/
                    }
                });
            };


            $scope.removeOwnerName = function() {
                $scope.ownerName =" ";
            };
            $scope.cancelRegistrationWarning = function (cancelFunction) {
                var result = RegistrationService.processForm($scope.tei, $scope.selectedTei, $scope.teiOriginal, $scope.attributesById);
                var prStDe;
                if (!result.formChanged) {
                    if ($scope.currentStage &&  $scope.currentStage.programStageDataElements) {
                        for (var index = 0; index < $scope.currentStage.programStageDataElements.length; index++) {
                            prStDe = $scope.currentStage.programStageDataElements[index];
                            if ($scope.currentEvent[prStDe.dataElement.id]) {
                                result.formChanged = true;
                                break;
                            }
                        }
                    }
                }
                if (result.formChanged) {
                    var modalOptions = {
                        closeButtonText: 'no',
                        actionButtonText: 'yes',
                        headerText: 'cancel',
                        bodyText: 'are_you_sure_to_cancel_registration'
                    };

                    ModalService.showModal({}, modalOptions).then(function () {
                        $scope.outerForm.$setPristine();
                        cancelFunction();
                    });
                }
                else {
                    $scope.outerForm.$setPristine();
                    cancelFunction();
                }
            };

            $scope.showAttributeMap = function (obj, id) {
                var lat = "",
                    lng = "";
                if (obj[id] && obj[id].length > 0) {
                    var coordinates = obj[id].split(",");
                    lng = coordinates[0];
                    lat = coordinates[1];
                }
                var modalInstance = $modal.open({
                    templateUrl: '../dhis-web-commons/angular-forms/map.html',
                    controller: 'MapController',
                    windowClass: 'modal-full-window',
                    resolve: {
                        location: function () {
                            return {lat: lat, lng: lng};
                        }
                    }
                });

                modalInstance.result.then(function (location) {
                    if (angular.isObject(location)) {
                        obj[id] = location.lng + ',' + location.lat;
                    }
                }, function () {
                });
            };

            $scope.sqFeetToSqMetre = function (FromSqFeet) {
                $scope.ToSqMetres = FromSqFeet*0.09;
                $scope.selectedTei[$scope.sqMetre] = $scope.ToSqMetres; //put calculated value in sq metre text box

            };


            $scope.SqMetreTosqFeet = function (FromSqMetre) {
                $scope.ToSqFeet = FromSqMetre*10.76;
                $scope.selectedTei[$scope.sqFeet] = $scope.ToSqFeet;//put calculated value in sq feet text box
                // alert(FromSqFeet);


            };

            $scope.showDataElementMap = function (obj, id) {
                var lat = "",
                    lng = "";
                if (obj[id] && obj[id].length > 0) {
                    var coordinates = obj[id].split(",");
                    lng = coordinates[0];
                    lat = coordinates[1];
                }
                var modalInstance = $modal.open({
                    templateUrl: '../dhis-web-commons/angular-forms/map.html',
                    controller: 'MapController',
                    windowClass: 'modal-full-window',
                    resolve: {
                        location: function () {
                            return {lat: lat, lng: lng};
                        }
                    }
                });

                modalInstance.result.then(function (location) {
                    if (angular.isObject(location)) {
                        obj[id] = location.lng + ',' + location.lat;
                    }
                }, function () {
                });
            };

            $scope.saveDatavalue = function () {
                $scope.executeRules();
            };
        });
    });
